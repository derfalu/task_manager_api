from fastapi import APIRouter, Depends
from sqlalchemy.orm import Session
from app.db.deps import get_db
from app.schemas.tag import TagRead, TagCreate
from app.services import tag_service
from app.core.deps import get_current_user
from app.models.user import User

router = APIRouter(prefix="/tags", tags=["–¢–µ–≥–∏ üìå"])


@router.get(
    "/",
    response_model=list[TagRead],
    summary="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ–≥–æ–≤",
    description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Ç–µ–≥–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
)
def list_tags(db: Session = Depends(get_db), user: User = Depends(get_current_user)):
    return tag_service.get_all_tags(db, user)


@router.post(
    "/",
    response_model=TagRead,
    status_code=201,
    summary="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–µ–≥",
    description="""
–°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π —Ç–µ–≥ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º.

- –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
""",
)
def create_tag(
    tag_in: TagCreate,
    db: Session = Depends(get_db),
    user: User = Depends(get_current_user),
):
    return tag_service.create_tag(db, tag_in, user)


@router.delete(
    "/{tag_id}",
    status_code=204,
    summary="–£–¥–∞–ª–∏—Ç—å —Ç–µ–≥",
    description="""
–£–¥–∞–ª—è–µ—Ç —Ç–µ–≥ –ø–æ ID, –µ—Å–ª–∏ –æ–Ω –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ç–µ–∫—É—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

‚ö†Ô∏è –ï—Å–ª–∏ —Ç–µ–≥ —Å–≤—è–∑–∞–Ω —Å –∑–∞–¥–∞—á–∞–º–∏, –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –æ—à–∏–±–∫–∞.
""",
)
def delete_tag(
    tag_id: int, db: Session = Depends(get_db), user: User = Depends(get_current_user)
):
    tag_service.delete_tag(db, tag_id, user)
